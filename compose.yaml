services:
  seq:
    image: datalust/seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_API_CANONICALURI=https://example.ru
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=QLqkFG4yfHbXASe6mQeAXJ7BlFJxXnQSiLpkEwF/dWVLewzVFFOoJYFR0n71GKSfzoZSawe3EajOI8TiqEznFzGuQD3PZTwDAJzxtjJkJ2lN
    ports:
      - 5341:5341
    volumes:
      - .seq-data:/data
    networks:
      - app-net
    deploy:
      resources:
        limits:
          memory: 16G

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - 6060:5432

  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: stepanenkodo@yandex.ru
      PGADMIN_DEFAULT_PASSWORD: 123456
      PGADMIN_LISTEN_PORT: 8081
    ports:
      - 5050:8081
    volumes:
      - pgadmin4-data:/pgadmin4/servers.json
    networks:
      - app-net
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - postgres

  identity:
    build: 
      context: ./IdentityServer
    image: example.ru:9000/identity
    environment:
      - APP_CLIENT_URL=https://example.ru
      - APP_POSTGRESQL_CONNECTION_STRING=User ID=postgres;Password=123456;Host=host.docker.internal;Port=6060;Database=Identity;
      - APP_SEQ_URL=http://seq:5341
      - APP_DEFAULT_USER_USERNAME=admin
      - APP_DEFAULT_USER_PASSWORD=Test12345*
      - APP_DEFAULT_USER_EMAIL=admin@mail.com
      - APP_DEFAULT_USER_NAME=Денис Степаненко
      - APP_DEFAULT_USER_GIVENNAME=Денис
      - APP_DEFAULT_USER_FAMILYNAME=Степаненко
    networks:
      - app-net
    depends_on:
      - seq
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway

  redis:
      image: redis/redis-stack-server
      restart: always
      environment:
        - REDIS_PASSWORD=my_redis_password
      # This persistence strategy saves a snapshot of the DB
      # every 60 seconds if at least 1 write operation was performed
      command: redis-server --save 60 1 --loglevel warning --requirepass my_redis_password  
        --loadmodule /opt/redis-stack/lib/redisearch.so
        --loadmodule /opt/redis-stack/lib/rejson.so
        --loadmodule /opt/redis-stack/lib/redistimeseries.so
      volumes:
        - .redis-data:/data
      ports:
        - 6379:6379

  backend:
    build: 
      context: ./IOTAPI
    image: example.ru:9000/backend
    environment:
      - APP_AUTHORITY=https://example.ru
      - APP_API_KEY=test
      - APP_REDIS_CONNECTION_STRING=host.docker.internal:6379,name=default,password=my_redis_password
      - MQTTBrokerSettings__TCPPort=6000
      - MQTTBrokerSettings__WSPort=5000
      - MQTTBrokerSettings__DefaultUserName=firstpart
      - MQTTBrokerSettings__DefaultPassword=secondpart
    networks:
      - app-net    
    depends_on:
      - identity
      - redis
      - seq
    extra_hosts:
      - host.docker.internal:host-gateway

  nginx:
    build: 
      context: ./nginx
    image: example.ru:9000/nginx
    volumes:
      - /home/certbot/fullchain.pem:/etc/ssl/certs/cert.pem
      - /home/certbot/privkey.pem:/etc/ssl/private/key.pem
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /home/certbot/www/:/var/www/certbot
    environment:
      - APP_CLIENT_URL=https://example.ru
      - APP_AUTHORITY=https://example.ru
      - APP_API_URL=https://example.ru
      - APP_CLIENT_ID=spa
      - APP_MQTT_URL=wss://example.ru/mqtt
    ports:
        - "443:443"
        - "80:80"
        - "1883:1883"
    networks:
      - app-net
    depends_on:
      - backend

networks:
  app-net:
    driver: bridge

volumes:
  postgresql-data:
  pgadmin4-data: